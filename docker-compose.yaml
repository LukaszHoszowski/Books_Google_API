networks:
  web:
    driver: bridge

services:
  db:
    image: library/postgres:14.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - web
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
    networks:
      - web

  backend:
    build:
      context: .
      dockerfile: "Dockerfile"
    env_file:
      - ./envs/.env
      - ./envs/.env.db
    command: sh -c "
      flake8 -v --ignore=E501 --output-file=./test/flake8.log &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/usr/src/app/
    environment:
      - 'REDIS_HOST=redis'
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis
    restart: "on-failure"
    networks:
      - web

volumes:
  postgres_data:
  redisdata:
